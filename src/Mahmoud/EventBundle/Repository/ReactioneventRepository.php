<?php

namespace Mahmoud\EventBundle\Repository;

/**
 * ReactioneventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReactioneventRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByEventId($id)
    {
        $query =$this->createQueryBuilder('l')
            ->innerJoin('l.eventId','e')
            ->where('e.id =:id ')
            ->setParameters(array(
                'id'=>$id
            ))
            ->getQuery();
        return $query->getResult();
    }

    public function countLike($id)
    {
        $query =$this->createQueryBuilder('r')
            ->select(count(r.id))
            ->Where('r.eventId =:id ')
            ->andWhere('r.liked=1')
            ->setParameters(array(
                'id'=>$id
            ))
            ->getQuery();
        return $query->getResult();
    }
    public function countAllLike()
    {
        $query =$this->createQueryBuilder('r')
            ->select(count(r.id))
            ->Where('r.liked=1')
            ->getQuery();
        return $query->getResult();
    }
    public function countDislike($id)
    {
        $query =$this->createQueryBuilder('r')
            ->select(count(r.id))
            ->Where('r.eventId =:id ')
            ->andWhere('r.liked=-1')
            ->setParameters(array(
                'id'=>$id
            ))
            ->getQuery();
        return $query->getResult();
    }
    public function countAllDislike($id)
    {
        $query =$this->createQueryBuilder('r')
            ->select(count(r.id))
            ->Where('r.eventId =:id ')
            ->andWhere('r.liked=-1')
            ->setParameters(array(
                'id'=>$id
            ))
            ->getQuery();
        return $query->getResult();
    }

    public function countInterst($id)
    {
        $query =$this->createQueryBuilder('r')
            ->select(count(r.id))
            ->Where('r.eventId =:id ')
            ->andWhere('r.interst=1')
            ->setParameters(array(
                'id'=>$id
            ))
            ->getQuery();
        return $query->getResult();
    }
}
